Introdução ao Go (golang)

Vinicius Pacheco 
@ViniciusPach
vinicius.pacheco@caelum.com.br
http://about.me/viniciusfeitosa
https://github.com/viniciusfeitosa

* @ViniciusPach

.image images/eu.jpg _ 350

@ViniciusPach
vinicius.pacheco@caelum.com.br
Analista Desenvolvedor na globo.com
Instrutor na Caelum 

* Hey ho let's Go

* História do Go

.image images/imagem1.jpeg _ 400

* Criadores

.image images/imagem2.png

- Robert Griesemer (V8 JavaScript engine, Java HotSpot)
- Rob Pike (UTF-8, Unix)
- Ken Thompson (UTF-8, B, Unix)

* O Problema

.image images/wrong.png

- Muito código legado e difícil de ser mantido
- O código legado era performático
- Dificuldade de escalabilidade

* O Ecossistema do Problema

.image images/c++.png _ 500

- C++ (Muito rápido, mas difícil de ser mantido)
- Java (Rápido, mas ainda sim muito verboso)
- Python (Ótima sintaxe, mas bem lento)

* Quem usa?

.image images/usa1.png _ 250
.image images/usa2.png _ 250
.image images/usa3.png _ 250

* Quem usa?

- Github
- Dropbox
- Disqus
- Bitly
- Bitbucket
- Digital Ocean
- OUTROS...

* Montando o Ambiente

$ brew install go
$ export GOPATH=$HOME/seu diretório(workspace)
$ export GOBIN=$GOPATH/bin
$ export PATH=$PATH:$GOBIN 

obs: Dentro do workspace deve conter os diretórios bin, src, pkg

* Sintaxe básica

* Hello World

.play code/hello.go

* Variáveis e Constantes

.play code/var_const.go

* Arrary, slice e map

.play code/array_slice_map.go

* Estrutura de controle (if)

.play code/if.go

* Estrutura de controle (switch)

.play code/switch.go

* Estrutura de repetição 1 (for)

.play code/for1.go

* Estrutura de repetição 2 (for)

.play code/for2.go

* Funções

.play code/functions.go

* Closure

.play code/closure.go

* Recursão

.play code/recursao.go

* Defer, Panic e Recover

- defer: Última ação a ser executada antes do return ou fim do contexto
- panic: Lança um erro em tempo de execução
- recover: recupera a mensagem de panic disparada 

* Defer, Panic e Recover

.play code/defer_panic_recover.go

* Ponteiros

.play code/ponteiros.go

* Struct

.play code/struct.go

* Interfaces

.play code/interfaces.go

* Goroutines

.play code/goroutines.go

* Channels

.play code/channels.go

* Onde posso contiuar estudando?

.link http://www.casadocodigo.com.br/products/livro-google-go
.link https://golang.org/doc/effective_go.html
.link http://tour.golang.org/#1
.link https://gobyexample.com/
.link https://groups.google.com/forum/#!forum/golang-brasil 
